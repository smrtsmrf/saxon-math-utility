alg = {
	L1: {
		1: 'SB2', 
		2: 'SB3',
		3: 'SB2',
		4: 'SB3',
		5: 'SB5',
		6: 'SB6',
		7: 'SB3',
		8: 'SB7',
		9: 'SB12',
		10: 'SB12',
		11: 'SB5',
		12: 'SB5',
		13: 1,
		14: 1,
		15: 1,
		16: 1,
		17: 1,
		18: 'SB1',
		19: 'SB3',
		20: 'SB13',
		21: 'SB14',
		22: 1,
		23: 'SB14',
		24: 'SB4',
		25: 1,
		26: 1,
		27: 'SB2',
		28: 'SB4',
		29: 'SB1',
		30: 1
	},
	L2: {
		1: 'SB9',
		2: 'SB9',
		3: 'SB10',
		4: 'SB10',
		5: 'SB3',
		6: 'SB3',
		7: 2,
		8: 2,
		9: 2,
		10: 1,
		11: 1,
		12: 1,
		13: 'SB29',
		14: 1,
		15: 1,
		16: 'SB12',
		17: 'SB13',
		18: 'SB13',
		19: 'SB4',
		20: 'SB5',
		21: 1,
		22: 1,
		23: 2,
		24: 2,
		25: 2,
		26: 2,
		27: 2,
		28: 'SB14',
		29: 2,
		30: 1
	},
	L3: {
		1: 'SB9', 
		2: 'SB9',
		3: 'SB10',
		4: 'SB10',
		5: 'SB3',
		6: 'SB3',
		7: 2,
		8: 2,
		9: 2,
		10: 1,
		11: 2,
		12: 2,
		13: 'SB1',
		14: 'SB1',
		15: 'SB3',
		16: 1,
		17: 'SB12',
		18: 3,
		19: 'SB14',
		20: 'SB4',
		21: 3,
		22: 3,
		23: 3,
		24: 3,
		25: 3,
		26: 'SB13',
		27: 3,
		28: 2,
		29: 'SB26',
		30: 2 
	},
	L4: {
		1: 'SB3', 
		2: 'SB3',
		3: 'SB3',
		4: 'SB3',
		5: 'SB2',
		6: 'SB2',
		7: 2,
		8: 'SB12',
		9: 'SB4',
		10: 1,
		11: 1,
		12: 1,
		13: 'SB5',
		14: 'SB5',
		15: 4,
		16: 'SB13',
		17: 'SB29',
		18: 'SB14',
		19: 'SB3',
		20: 'SB12',
		21: 'SB4',
		22: 2,
		23: 4,
		24: 4,
		25: 4,
		26: 4,
		27: 4,
		28: 3,
		29: 4,
		30: 4
	},
	L5: {
		1: 'SB3', 
		2: 'SB3',
		3: 'SB3',
		4: 'SB3',
		5: 'SB2',
		6: 'SB2',
		7: 2,
		8: 'SB12',
		9: 'SB4',
		10: 1,
		11: 1,
		12: 1,
		13: 'SB5',
		14: 'SB1',
		15: 'SB5',
		16: 5,
		17: 'SB13',
		18: 'SB8',
		19: 5,
		20: 'SB14',
		21: 4,
		22: 5,
		23: 5,
		24: 5,
		25: 5,
		26: 5,
		27: 4,
		28: 5,
		29: 3,
		30: 5
	},
	L6: {
		1: 'SB3', 
		2: 'SB3',
		3: 5,
		4: 'SB3',
		5: 'SB2',
		6: 'SB2',
		7: 'SB2',
		8: 'SB2',
		9: 'SB12',
		10: 'SB12',
		11: 'SB29',
		12: 'SB4',
		13: 'SB5',
		14: 'SB5',
		15: 'SB5',
		16: 4,
		17: 4,
		18: 6,
		19: 6,
		20: 6,
		21: 6,
		22: 6,
		23: 'SB13',
		24: 5,
		25: 5,
		26: 5,
		27: 3,
		28: 2,
		29: 1,
		30: 6
	},
	L7: {
		1: 4, 
		2: 4,
		3: 6,
		4: 'SB3',
		5: 4,
		6: 4,
		7: 'SB2',
		8: 'SB2',
		9: 1,
		10:1 ,
		11: 'SB13',
		12: 'SB12',
		13: 'SB12',
		14: 'SB4',
		15: 'SB5',
		16: 'SB5',
		17: 7,
		18: 7,
		19: 7,
		20: 7,
		21: 7,
		22: 7,
		23: 6,
		24: 6,
		25: 5,
		26: 5,
		27: 4,
		28: 6,
		29: 1,
		30: 7
	},
	L8: {
		1: 4, 
		2: 4,
		3: 6,
		4: 4,
		5: 6,
		6: 'SB2',
		7: 1,
		8: 4,
		9: 'SB29',
		10: 'SB2',
		11: 'SB12',
		12: 'SB4',
		13: 'SB5',
		14: 8,
		15: 8,
		16: 8,
		17: 6,
		18: 8,
		19: 8,
		20: 8,
		21: 8,
		22: 8,
		23: 'SB13',
		24: 7,
		25: 7,
		26: 6,
		27: 5,
		28: 3,
		29: 8,
		30: 3
	},
	L9: {
		1: 'SB3', 
		2: 'SB3',
		3: 'SB3',
		4: 'SB3',
		5: 'SB2',
		6: 'SB2',
		7: 'SB2',
		8: 'SB2',
		9: 'SB14',
		10: 7,
		11: 8,
		12: 9,
		13: 'SB13',
		14: 'SB12',
		15: 9,
		16: 7,
		17: 7,
		18: 9,
		19: 9,
		20: 9,
		21: 9,
		22: 9,
		23: 'SB4',
		24: 'SB5',
		25: 8,
		26: 8,
		27: 7,
		28: 6,
		29: 4,
		30: 9
	},
	L10: {
		1: 'SB3', 
		2: 'SB3',
		3: 'SB3',
		4: 'SB3',
		5: 'SB3',
		6: 'SB3',
		7: 'SB2',
		8: 'SB2',
		9: 'SB2',
		10: 'SB2',
		11: 10,
		12: 'SB1',
		13: 8,
		14: 8,
		15: 4,
		16: 10,
		17: 10,
		18: 10,
		19: 'SB29',
		20: 9,
		21: 9,
		22: 8,
		23: 8,
		24: 7,
		25: 5,
		26: 5,
		27: 1,
		28: 5,
		29: 5,
		30: 10 
	},
	L11: {
		1: 11, 
		2: 11,
		3: 10,
		4: 4,
		5: 'SB29',
		6: 'SB13',
		7: 9,
		8: 9,
		9: 8,
		10:7 ,
		11: 11,
		12: 9,
		13: 11,
		14: 11,
		15: 10,
		16: 10,
		17: 9,
		18: 9,
		19: 6,
		20: 'INV1',
		21: 11,
		22: 11,
		23: 5,
		24: 11,
		25: 11,
		26: 1,
		27: 10,
		28: 8,
		29: 6,
		30: 9 
	},
	L12: {
		1: 12, 
		2: 11,
		3: 5,
		4: 11,
		5: 12,
		6: 'SB7',
		7: 'SB15',
		8: 12,
		9: 10,
		10: 11,
		11: 12,
		12: 9,
		13: 9,
		14: 8,
		15: 12,
		16: 12,
		17: 12,
		18: 11,
		19: 11,
		20: 10,
		21: 8,
		22: 7,
		23: 4,
		24: 3,
		25: 2,
		26: 10,
		27: 10,
		28: 11,
		29: 4,
		30: 6
	},
	L13: {
		1: 11, 
		2: 11,
		3: 6,
		4: 6,
		5: 9,
		6: 9,
		7: 13,
		8: 13,
		9: 13,
		10: 10,
		11: 8,
		12: 1,
		13: 13,
		14: 12,
		15: 4,
		16: 10,
		17: 10,
		18: 9,
		19: 13,
		20: 13,
		21: 13,
		22: 1,
		23: 4,
		24: 5,
		25: 7,
		26: 12,
		27: 12,
		28: 11,
		29: 8,
		30:'INV1' 
	},
	L14: {
		1: 14, 
		2: 14,
		3: 8,
		4: 8,
		5: 4,
		6: 11,
		7: 4,
		8: 4,
		9: 13,
		10: 10,
		11: 13,
		12: 12,
		13: 11,
		14: 12,
		15: 14,
		16: 14,
		17: 14,
		18: 13,
		19: 13,
		20: 9,
		21: 8,
		22: 1,
		23: 1,
		24: 2,
		25: 6,
		26: 4,
		27: 5,
		28: 6,
		29: 7,
		30: 13 
	},
	L15: {
		1: 15, 
		2: 15,
		3: 13,
		4: 13,
		5: 14,
		6: 14,
		7: 14,
		8: 15,
		9: 6,
		10:5 ,
		11: 15,
		12: 15,
		13: 15,
		14: 12,
		15: 8,
		16: 15,
		17: 15,
		18: 14,
		19: 13,
		20: 12,
		21: 12,
		22: 10,
		23: 9,
		24: 6,
		25: 3,
		26: 5,
		27: 6,
		28: 7,
		29: 'INV1',
		30: 13
	},
	L16: {
		1: 10, 
		2: 4,
		3: 1,
		4: 1,
		5: 1,
		6: 15,
		7: 15,
		8: 16,
		9: 16,
		10: 16,
		11: 9,
		12: 15,
		13: 12,
		14: 16,
		15: 16,
		16: 16,
		17: 16,
		18: 16,
		19: 16,
		20: 15,
		21: 14,
		22: 13,
		23: 13,
		24: 11,
		25: 10,
		26: 8,
		27: 7,
		28: 6,
		29: 4,
		30: 'INV1' 
	},
	L17: {
		1: 15, 
		2: 15,
		3: 2,
		4: 1,
		5: 17,
		6: 17,
		7: 10,
		8: 13,
		9: 13,
		10: 12,
		11: 16,
		12: 16,
		13: 17,
		14: 17,
		15: 17,
		16: 17,
		17: 17,
		18: 16,
		19: 16,
		20: 4,
		21: 15,
		22: 14,
		23: 12,
		24: 11,
		25: 9,
		26: 8,
		27: 4,
		28: 5,
		29: 4,
		30: 15 
	},
	L18: {
		1: 17, 
		2: 18,
		3: 18,
		4: 18,
		5: 18,
		6: 5,
		7: 6,
		8: 8,
		9: 4,
		10: 4,
		11: 18,
		12: 18,
		13: 13,
		14: 13,
		15: 18,
		16: 17,
		17: 18,
		18: 16,
		19: 16,
		20: 16,
		21: 10,
		22: 18,
		23: 17,
		24: 17,
		25: 15,
		26: 15,
		27: 14,
		28: 13,
		29: 12,
		30: 17
	},
	L19: {
		1: 18, 
		2: 19,
		3: 19,
		4: 19,
		5: 17,
		6: 15,
		7: 3,
		8: 12,
		9: 10,
		10: 19,
		11: 19,
		12: 19,
		13: 19,
		14: 19,
		15: 19,
		16: 19,
		17: 18,
		18: 18,
		19: 18,
		20: 17,
		21: 16,
		22: 16,
		23: 5,
		24: 14,
		25: 13,
		26: 9,
		27: 4,
		28: 6,
		29: 15,
		30: 14 
	},
	L20: {
		1: 5, 
		2: 18,
		3: 18,
		4: 19,
		5: 19,
		6: 20,
		7: 20,
		8: 20,
		9: 20,
		10: 20,
		11: 20,
		12: 20,
		13: 19,
		14: 19,
		15: 18,
		16: 17,
		17: 12,
		18: 16,
		19: 14,
		20: 13,
		21: 12,
		22: 11,
		23: 10,
		24: 8,
		25: 7,
		26: 4,
		27: 2,
		28: 2,
		29: 17,
		30: 20 
	},
	// L21: {
	// 	1:  
	// 	2: 
	// 	3: 
	// 	4: 
	// 	5: 
	// 	6: 
	// 	7: 
	// 	8: 
	// 	9: 
	// 	10: 
	// 	11: 
	// 	12: 
	// 	13:
	// 	14: 
	// 	15: 
	// 	16: 
	// 	17: 
	// 	18: 
	// 	19: 
	// 	20: 
	// 	21: 
	// 	22: 
	// 	23: 
	// 	24: 
	// 	25: 
	// 	26: 
	// 	27:
	// 	28:
	// 	29: 
	// 	30:
	// },
	L22: {},
	L23: {},
	L24: {},
	L25: {},
	L26: {},
	L27: {},
	L28: {},
	L29: {},
	L30: {},
	L31: {},
	L32: {},
	L33: {},
	L34: {},
	L35: {},
	L36: {}, 
	L37: {},
	L38: {},
	L39: {},
	L40: {},
	L41: {},
	L42: {},
	L43: {},
	L44: {},
	L45: {},
	L46: {}, 
	L47: {},
	L48: {},
	L49: {},
	L50: {},
	L51: {},
	L52: {},
	L53: {},
	L54: {},
	L55: {},
	L56: {}, 
	L57: {},
	L58: {},
	L59: {},
	L60: {},

}

module.exports = alg


// this removes it but I need to somehow not remove it from the original source

// var skippedLesson = prompt('which lesson did you skip? ');
// var skippedLessons = [8, 11];

// function hwList(skippedLessons) {
// 	// var HW = {} - this doesn't work outside of browser? need to console.log 
// 	HW = {};

// 	for (var lesson in alg) {
// 		HW[lesson] = {};
// 		HW[lesson].skip = [];
// 		HW[lesson].assign = Object.keys(alg[lesson])
// 		for (var i=0;i<skippedLessons.length;i++) {
// 			var skipped = skippedLessons[i]
// 			for (var num in alg[lesson]) {
// 				if (alg[lesson][num] == skipped) {
// 					HW[lesson].skip.push(num)	
// 					HW[lesson].assign.splice(HW[lesson].assign.indexOf(num),1)	
// 				}
// 			}
// 		}
// 		HW[lesson].skip = getRanges(HW[lesson].skip.sort(function(a,b) {return a-b;}))
// 		HW[lesson].assign = getRanges(HW[lesson].assign)
// 	}
// 	return HW;
// }

// hwList(skippedLessons)

// console.log(HW);

// console.log('hi');

// function getRanges(array) {
//   var ranges = [], rstart, rend;
//   for (var i = 0; i < array.length; i++) {
//     rstart = array[i];
//     rend = rstart;
//     while (array[i + 1] - array[i] == 1) {
//       rend = array[i + 1]; // increment the index if the numbers sequential
//       i++;
//     }
//     ranges.push(rstart == rend ? rstart+'' : rstart + '-' + rend);
//   }
//   return ranges;
// }

